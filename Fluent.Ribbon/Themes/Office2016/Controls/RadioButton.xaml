<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent">

    <Style x:Key="{x:Type Fluent:RadioButton}" 
           TargetType="{x:Type Fluent:RadioButton}">
        <Setter Property="Margin" 
                Value="0 0 0 0"/>
        <Setter Property="Background"
                Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Background}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.BorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="HorizontalContentAlignment" 
                Value="Left" />
        <Setter Property="VerticalContentAlignment" 
                Value="Center" />
        <Setter Property="Padding" 
                Value="6,0,0,0" />
        <Setter Property="Height" 
                Value="21"/>
        <Setter Property="MinHeight" 
                Value="21"/>
        <Setter Property="MinWidth" 
                Value="20" />
        <Setter Property="BorderThickness" 
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverBackground" />

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Checked1" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Checked1" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Checked1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="hoverBackground" Opacity="0" Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Background}" />
                        <Grid Margin="4 1 4 1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Transparent" Margin="-6,0" />
                            <Ellipse x:Name="normal" 
                                     Opacity="1" 
                                     Stroke="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.BorderBrush}" 
                                     StrokeThickness="1" 
                                     Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Background}" 
                                     Width="18" Height="18" />
                            <Ellipse x:Name="hover" 
                                     Stroke="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.BorderBrush}" 
                                     StrokeThickness="1" 
                                     Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Background}" 
                                     Opacity="0" 
                                     Width="18" Height="18" />
                            <Ellipse x:Name="pressed" 
                                     Opacity="0" 
                                     Stroke="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.BorderBrush}" 
                                     StrokeThickness="1" 
                                     Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Background}" 
                                     Width="18" Height="18" />
                            <Ellipse x:Name="Checked1" 
                                     Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Stroke}" 
                                     Opacity="0" 
                                     Width="10" Height="10" />
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" Grid.Column="1" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>