<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <ControlTemplate x:Key="CheckBoxControlTemplate"
                     TargetType="{x:Type Fluent:CheckBox}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked" />
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid" />
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
                                                           Storyboard.TargetProperty="IsOpen">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid HorizontalAlignment="Left"
                  VerticalAlignment="Center">
                <Border x:Name="border"
                        Width="16"
                        Height="16"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <Path x:Name="CheckIcon"
                              Width="14"
                              Height="12"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M4.99995 6.99998L11.1468 0.853107C11.3406 0.659357 11.6593 0.659357 11.8531 0.853107L13.6468 2.64686C13.8406 2.84061 13.8406 3.15936 13.6468 3.35311L5.35308 11.6469C5.15933 11.8406 4.84058 11.8406 4.64683 11.6469L0.353076 7.35311C0.159326 7.15936 0.159326 6.84061 0.353076 6.64686L2.14683 4.85311C2.34058 4.65936 2.65933 4.65936 2.85308 4.85311L4.99995 6.99998Z"
                              Fluent:FrameworkHelper.UseLayoutRounding="False"
                              Opacity="0"
                              Stretch="Fill"
                              Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Stroke}" />
                        <Rectangle x:Name="IndeterminateIcon"
                                   Width="8"
                                   Height="8"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Opacity="0"
                                   Fill="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Stroke}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource WhiteBrush}"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1" />
                    </Grid>
                </Border>
                <Border x:Name="ValidationErrorElement"
                        Margin="1"
                        BorderBrush="#FFDB000C"
                        BorderThickness="1"
                        CornerRadius="1"
                        Visibility="Collapsed">
                    <Grid Width="10"
                          Height="10"
                          Margin="0,-4,-4,0"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Background="Transparent">
                        <Path Margin="0,3,0,0"
                              Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z"
                              Fill="#DDD43940" />
                        <Path Margin="0,3,0,0"
                              Data="M 0,0 L2,0 L 7,5 L7,7"
                              Fill="White" />
                    </Grid>
                </Border>
            </Grid>
            <ContentControl Grid.Column="1"
                            IsTabStop="False"
                            Margin="6,0,0,0"
                            Foreground="{TemplateBinding Foreground}">
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Header}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  RecognizesAccessKey="True" />
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True"/>
                    <Condition Property="IsReadOnly"
                               Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.BorderBrush}" />
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Background}" />
                <Setter TargetName="CheckIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
                <Setter TargetName="IndeterminateIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed"
                               Value="True"/>
                    <Condition Property="IsReadOnly"
                               Value="False"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.BorderBrush}" />
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Background}" />
                <Setter TargetName="CheckIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
                <Setter TargetName="IndeterminateIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.BorderBrush}" />
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Background}" />
                <Setter TargetName="CheckIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Stroke}" />
                <Setter TargetName="IndeterminateIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Stroke}" />
            </Trigger>
            <Trigger Property="IsReadOnly"
                     Value="True">
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.BorderBrush}" />
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Background}" />
                <Setter TargetName="CheckIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Stroke}" />
                <Setter TargetName="IndeterminateIcon"
                        Property="Fill"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Stroke}" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="CheckIcon"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="{x:Null}">
                <Setter TargetName="IndeterminateIcon"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
            <Trigger Property="FlowDirection"
                     Value="RightToLeft">
                <Setter TargetName="CheckIcon"
                        Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               SnapsToDevicePixels="true"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RibbonCheckBoxStyle"
           TargetType="{x:Type Fluent:CheckBox}">
        <Setter Property="ToolTipService.ShowDuration"
                Value="30000" />
        <Setter Property="Template"
                Value="{DynamicResource CheckBoxControlTemplate}" />
        <Setter Property="Background"
                Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Background}" />
        <Setter Property="Foreground"
                Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.BorderBrush}" />
        <Setter Property="Margin"
                Value="6,2,4,2" />
        <Style.Triggers>
            <Trigger Property="Fluent:RibbonControl.IsQuickAccessItem" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Foreground.QuickAccess}" />
                <Setter Property="Height" Value="18"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Disabled.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource RibbonCheckBoxStyle}"
           TargetType="{x:Type Fluent:CheckBox}" />
</ResourceDictionary>