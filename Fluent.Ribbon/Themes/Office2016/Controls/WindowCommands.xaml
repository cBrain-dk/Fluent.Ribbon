<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:converters="clr-namespace:Fluent.Converters">

    <Style TargetType="{x:Type Fluent:WindowCommands}">
        <Setter Property="Foreground"
                Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Fluent:WindowCommands">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background"
                                        Value="{DynamicResource TransparentWhiteBrush}" />
                                <Setter Property="HorizontalContentAlignment"
                                        Value="Center" />
                                <Setter Property="VerticalContentAlignment"
                                        Value="Center" />
                                <Setter Property="Padding"
                                        Value="1" />
                                <Setter Property="Template"
                                        Value="{DynamicResource WindowCommandsControlTemplate}" />
                            </Style>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>

                    <StackPanel Orientation="Horizontal">
                        <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                      ItemTemplate="{TemplateBinding ItemTemplate}"
                                      ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                      ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                      Focusable="False"
                                      Margin="0 0 2 0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        
                        <Button x:Name="PART_Min"
                                Focusable="False"
                                Style="{DynamicResource CaptionButtonStyle}"
                                Padding="0"
                                Width="{TemplateBinding ActualHeight}"
                                ToolTip="{Binding Minimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                Uid="{Binding Minimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
                            <Canvas Width="9"
                                    Height="9"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <Path Data="F1M0,6L0,9 9,9 9,6 0,6z"
                                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      SnapsToDevicePixels="True"
                                      UseLayoutRounding="True"
                                      StrokeThickness="1.5" />
                            </Canvas>
                        </Button>

                        <Button x:Name="PART_Max"
                                Focusable="False"
                                Style="{DynamicResource CaptionButtonStyle}"
                                Padding="0"
                                Width="{TemplateBinding ActualHeight}"
                                Visibility="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={x:Static converters:StaticConverters.EqualsToVisibilityConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                ToolTip="{Binding Maximize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                Uid="{Binding Maximize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
                            <Canvas Width="9"
                                    Height="9"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <Path Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z"
                                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                      RenderOptions.EdgeMode="Aliased"
                                      SnapsToDevicePixels="True"
                                      Stretch="Uniform" />
                            </Canvas>
                        </Button>

                        <Button x:Name="PART_Restore"
                                Focusable="False"
                                Style="{DynamicResource CaptionButtonStyle}"
                                Padding="0"
                                Width="{TemplateBinding ActualHeight}"
                                Visibility="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={x:Static converters:StaticConverters.EqualsToVisibilityConverter}, ConverterParameter={x:Static WindowState.Maximized}}"
                                ToolTip="{Binding Restore, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                Uid="{Binding Restore, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
                            <Canvas Width="9"
                                    Height="9"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <Path Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z"
                                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                      RenderOptions.EdgeMode="Aliased"
                                      SnapsToDevicePixels="True"
                                      Stretch="Uniform" />
                            </Canvas>
                        </Button>

                        <Button x:Name="PART_Close"
                                Focusable="False"
                                Style="{DynamicResource CaptionButtonStyle}"
                                Padding="0"
                                Width="{TemplateBinding ActualHeight}"
                                ToolTip="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                Uid="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
                            <Canvas Width="9"
                                    Height="9"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      SnapsToDevicePixels="True" />
                            </Canvas>
                        </Button>
                    </StackPanel>
                    
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="NoResize">
                            <Setter Property="Visibility"
                                    TargetName="PART_Min"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="PART_Max"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="PART_Restore"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="CanMinimize">
                            <Setter Property="Visibility"
                                    TargetName="PART_Max"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="PART_Restore"
                                    Value="Collapsed" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_Min}"
                                 Value="True">
                            <Setter TargetName="PART_Min"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.Button.MouseOver.Background}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPressed, ElementName=PART_Min}"
                                     Value="True">
                            <Setter TargetName="PART_Min"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.Button.Pressed.Background}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_Max}"
                                 Value="True">
                            <Setter TargetName="PART_Max"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.Button.MouseOver.Background}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPressed, ElementName=PART_Max}"
                                     Value="True">
                            <Setter TargetName="PART_Max"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.Button.Pressed.Background}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_Restore}"
                                 Value="True">
                            <Setter TargetName="PART_Restore"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.Button.MouseOver.Background}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPressed, ElementName=PART_Restore}"
                                     Value="True">
                            <Setter TargetName="PART_Restore"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.Button.Pressed.Background}" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_Close}"
                                 Value="True">
                            <Setter TargetName="PART_Close"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.CloseButton.MouseOver.Background}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPressed, ElementName=PART_Close}"
                                     Value="True">
                            <Setter TargetName="PART_Close"
                                    Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.CloseButton.Pressed.Background}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type Button}"
                     x:Key="WindowCommandsControlTemplate">
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              RecognizesAccessKey="True"
                              Margin="11,1,11,1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused"
                     Value="True" />
            <Trigger Property="ToggleButton.IsChecked"
                     Value="True" />
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.DarkIdealForegroundDisabledBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
